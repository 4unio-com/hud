/*
 * Generated by gdbus-codegen 2.34.1. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __HUD_QUERY_IFACE_H__
#define __HUD_QUERY_IFACE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.canonical.hud.query */

#define HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY (hud_query_iface_com_canonical_hud_query_get_type ())
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY, HudQueryIfaceComCanonicalHudQuery))
#define HUD_QUERY_IFACE_IS_COM_CANONICAL_HUD_QUERY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY))
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY, HudQueryIfaceComCanonicalHudQueryIface))

struct _HudQueryIfaceComCanonicalHudQuery;
typedef struct _HudQueryIfaceComCanonicalHudQuery HudQueryIfaceComCanonicalHudQuery;
typedef struct _HudQueryIfaceComCanonicalHudQueryIface HudQueryIfaceComCanonicalHudQueryIface;

struct _HudQueryIfaceComCanonicalHudQueryIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_close_query) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_execute_command) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_item,
    guint arg_timestamp);

  gboolean (*handle_execute_parameterized) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_item,
    guint arg_timestamp);

  gboolean (*handle_execute_toolbar) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_item,
    guint arg_timestamp);

  gboolean (*handle_update_app) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_app);

  gboolean (*handle_update_query) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_query);

  gboolean (*handle_voice_query) (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation);

  const gchar * (*get_appstack_model) (HudQueryIfaceComCanonicalHudQuery *object);

  const gchar * (*get_current_query) (HudQueryIfaceComCanonicalHudQuery *object);

  const gchar * (*get_results_model) (HudQueryIfaceComCanonicalHudQuery *object);

  void (*voice_query_heard_something) (
    HudQueryIfaceComCanonicalHudQuery *object);

  void (*voice_query_listening) (
    HudQueryIfaceComCanonicalHudQuery *object);

  void (*voice_query_loading) (
    HudQueryIfaceComCanonicalHudQuery *object);

};

GType hud_query_iface_com_canonical_hud_query_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *hud_query_iface_com_canonical_hud_query_interface_info (void);
guint hud_query_iface_com_canonical_hud_query_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void hud_query_iface_com_canonical_hud_query_complete_update_query (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    gint modelRevision);

void hud_query_iface_com_canonical_hud_query_complete_voice_query (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    gint modelRevision,
    const gchar *query);

void hud_query_iface_com_canonical_hud_query_complete_update_app (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    gint modelRevision);

void hud_query_iface_com_canonical_hud_query_complete_close_query (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation);

void hud_query_iface_com_canonical_hud_query_complete_execute_command (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation);

void hud_query_iface_com_canonical_hud_query_complete_execute_parameterized (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation,
    const gchar *baseAction,
    const gchar *actionPath,
    const gchar *modelPath,
    gint modelSection);

void hud_query_iface_com_canonical_hud_query_complete_execute_toolbar (
    HudQueryIfaceComCanonicalHudQuery *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void hud_query_iface_com_canonical_hud_query_emit_voice_query_loading (
    HudQueryIfaceComCanonicalHudQuery *object);

void hud_query_iface_com_canonical_hud_query_emit_voice_query_listening (
    HudQueryIfaceComCanonicalHudQuery *object);

void hud_query_iface_com_canonical_hud_query_emit_voice_query_heard_something (
    HudQueryIfaceComCanonicalHudQuery *object);



/* D-Bus method calls: */
void hud_query_iface_com_canonical_hud_query_call_update_query (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    const gchar *arg_query,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_update_query_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    gint *out_modelRevision,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_update_query_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    const gchar *arg_query,
    gint *out_modelRevision,
    GCancellable *cancellable,
    GError **error);

void hud_query_iface_com_canonical_hud_query_call_voice_query (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_voice_query_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    gint *out_modelRevision,
    gchar **out_query,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_voice_query_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    gint *out_modelRevision,
    gchar **out_query,
    GCancellable *cancellable,
    GError **error);

void hud_query_iface_com_canonical_hud_query_call_update_app (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    const gchar *arg_app,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_update_app_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    gint *out_modelRevision,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_update_app_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    const gchar *arg_app,
    gint *out_modelRevision,
    GCancellable *cancellable,
    GError **error);

void hud_query_iface_com_canonical_hud_query_call_close_query (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_close_query_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_close_query_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GCancellable *cancellable,
    GError **error);

void hud_query_iface_com_canonical_hud_query_call_execute_command (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GVariant *arg_item,
    guint arg_timestamp,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_execute_command_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_execute_command_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GVariant *arg_item,
    guint arg_timestamp,
    GCancellable *cancellable,
    GError **error);

void hud_query_iface_com_canonical_hud_query_call_execute_parameterized (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GVariant *arg_item,
    guint arg_timestamp,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_execute_parameterized_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    gchar **out_baseAction,
    gchar **out_actionPath,
    gchar **out_modelPath,
    gint *out_modelSection,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_execute_parameterized_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GVariant *arg_item,
    guint arg_timestamp,
    gchar **out_baseAction,
    gchar **out_actionPath,
    gchar **out_modelPath,
    gint *out_modelSection,
    GCancellable *cancellable,
    GError **error);

void hud_query_iface_com_canonical_hud_query_call_execute_toolbar (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    const gchar *arg_item,
    guint arg_timestamp,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean hud_query_iface_com_canonical_hud_query_call_execute_toolbar_finish (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    GAsyncResult *res,
    GError **error);

gboolean hud_query_iface_com_canonical_hud_query_call_execute_toolbar_sync (
    HudQueryIfaceComCanonicalHudQuery *proxy,
    const gchar *arg_item,
    guint arg_timestamp,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *hud_query_iface_com_canonical_hud_query_get_results_model (HudQueryIfaceComCanonicalHudQuery *object);
gchar *hud_query_iface_com_canonical_hud_query_dup_results_model (HudQueryIfaceComCanonicalHudQuery *object);
void hud_query_iface_com_canonical_hud_query_set_results_model (HudQueryIfaceComCanonicalHudQuery *object, const gchar *value);

const gchar *hud_query_iface_com_canonical_hud_query_get_appstack_model (HudQueryIfaceComCanonicalHudQuery *object);
gchar *hud_query_iface_com_canonical_hud_query_dup_appstack_model (HudQueryIfaceComCanonicalHudQuery *object);
void hud_query_iface_com_canonical_hud_query_set_appstack_model (HudQueryIfaceComCanonicalHudQuery *object, const gchar *value);

const gchar *hud_query_iface_com_canonical_hud_query_get_current_query (HudQueryIfaceComCanonicalHudQuery *object);
gchar *hud_query_iface_com_canonical_hud_query_dup_current_query (HudQueryIfaceComCanonicalHudQuery *object);
void hud_query_iface_com_canonical_hud_query_set_current_query (HudQueryIfaceComCanonicalHudQuery *object, const gchar *value);


/* ---- */

#define HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_PROXY (hud_query_iface_com_canonical_hud_query_proxy_get_type ())
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_PROXY, HudQueryIfaceComCanonicalHudQueryProxy))
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_PROXY, HudQueryIfaceComCanonicalHudQueryProxyClass))
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_PROXY, HudQueryIfaceComCanonicalHudQueryProxyClass))
#define HUD_QUERY_IFACE_IS_COM_CANONICAL_HUD_QUERY_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_PROXY))
#define HUD_QUERY_IFACE_IS_COM_CANONICAL_HUD_QUERY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_PROXY))

typedef struct _HudQueryIfaceComCanonicalHudQueryProxy HudQueryIfaceComCanonicalHudQueryProxy;
typedef struct _HudQueryIfaceComCanonicalHudQueryProxyClass HudQueryIfaceComCanonicalHudQueryProxyClass;
typedef struct _HudQueryIfaceComCanonicalHudQueryProxyPrivate HudQueryIfaceComCanonicalHudQueryProxyPrivate;

struct _HudQueryIfaceComCanonicalHudQueryProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  HudQueryIfaceComCanonicalHudQueryProxyPrivate *priv;
};

struct _HudQueryIfaceComCanonicalHudQueryProxyClass
{
  GDBusProxyClass parent_class;
};

GType hud_query_iface_com_canonical_hud_query_proxy_get_type (void) G_GNUC_CONST;

void hud_query_iface_com_canonical_hud_query_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
HudQueryIfaceComCanonicalHudQuery *hud_query_iface_com_canonical_hud_query_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
HudQueryIfaceComCanonicalHudQuery *hud_query_iface_com_canonical_hud_query_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void hud_query_iface_com_canonical_hud_query_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
HudQueryIfaceComCanonicalHudQuery *hud_query_iface_com_canonical_hud_query_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
HudQueryIfaceComCanonicalHudQuery *hud_query_iface_com_canonical_hud_query_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_SKELETON (hud_query_iface_com_canonical_hud_query_skeleton_get_type ())
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_SKELETON, HudQueryIfaceComCanonicalHudQuerySkeleton))
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_SKELETON, HudQueryIfaceComCanonicalHudQuerySkeletonClass))
#define HUD_QUERY_IFACE_COM_CANONICAL_HUD_QUERY_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_SKELETON, HudQueryIfaceComCanonicalHudQuerySkeletonClass))
#define HUD_QUERY_IFACE_IS_COM_CANONICAL_HUD_QUERY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_SKELETON))
#define HUD_QUERY_IFACE_IS_COM_CANONICAL_HUD_QUERY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), HUD_QUERY_IFACE_TYPE_COM_CANONICAL_HUD_QUERY_SKELETON))

typedef struct _HudQueryIfaceComCanonicalHudQuerySkeleton HudQueryIfaceComCanonicalHudQuerySkeleton;
typedef struct _HudQueryIfaceComCanonicalHudQuerySkeletonClass HudQueryIfaceComCanonicalHudQuerySkeletonClass;
typedef struct _HudQueryIfaceComCanonicalHudQuerySkeletonPrivate HudQueryIfaceComCanonicalHudQuerySkeletonPrivate;

struct _HudQueryIfaceComCanonicalHudQuerySkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  HudQueryIfaceComCanonicalHudQuerySkeletonPrivate *priv;
};

struct _HudQueryIfaceComCanonicalHudQuerySkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType hud_query_iface_com_canonical_hud_query_skeleton_get_type (void) G_GNUC_CONST;

HudQueryIfaceComCanonicalHudQuery *hud_query_iface_com_canonical_hud_query_skeleton_new (void);


G_END_DECLS

#endif /* __HUD_QUERY_IFACE_H__ */
