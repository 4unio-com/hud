/*
 * Generated by gdbus-codegen 2.34.1. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __SERVICE_IFACE_H__
#define __SERVICE_IFACE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.canonical.hud */

#define _HUD_SERVICE_TYPE_COM_CANONICAL_HUD (_hud_service_com_canonical_hud_get_type ())
#define _HUD_SERVICE_COM_CANONICAL_HUD(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD, _HudServiceComCanonicalHud))
#define _HUD_SERVICE_IS_COM_CANONICAL_HUD(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD))
#define _HUD_SERVICE_COM_CANONICAL_HUD_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD, _HudServiceComCanonicalHudIface))

struct __HudServiceComCanonicalHud;
typedef struct __HudServiceComCanonicalHud _HudServiceComCanonicalHud;
typedef struct __HudServiceComCanonicalHudIface _HudServiceComCanonicalHudIface;

struct __HudServiceComCanonicalHudIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_register_application) (
    _HudServiceComCanonicalHud *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id);

  gboolean (*handle_start_query) (
    _HudServiceComCanonicalHud *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_query);

  GVariant * (*get_applications) (_HudServiceComCanonicalHud *object);

  const gchar *const * (*get_open_queries) (_HudServiceComCanonicalHud *object);

};

GType _hud_service_com_canonical_hud_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_hud_service_com_canonical_hud_interface_info (void);
guint _hud_service_com_canonical_hud_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _hud_service_com_canonical_hud_complete_start_query (
    _HudServiceComCanonicalHud *object,
    GDBusMethodInvocation *invocation,
    const gchar *queryObject,
    const gchar *resultsName,
    const gchar *appstackName,
    gint modelRevision);

void _hud_service_com_canonical_hud_complete_register_application (
    _HudServiceComCanonicalHud *object,
    GDBusMethodInvocation *invocation,
    const gchar *appObject);



/* D-Bus method calls: */
void _hud_service_com_canonical_hud_call_start_query (
    _HudServiceComCanonicalHud *proxy,
    const gchar *arg_query,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _hud_service_com_canonical_hud_call_start_query_finish (
    _HudServiceComCanonicalHud *proxy,
    gchar **out_queryObject,
    gchar **out_resultsName,
    gchar **out_appstackName,
    gint *out_modelRevision,
    GAsyncResult *res,
    GError **error);

gboolean _hud_service_com_canonical_hud_call_start_query_sync (
    _HudServiceComCanonicalHud *proxy,
    const gchar *arg_query,
    gchar **out_queryObject,
    gchar **out_resultsName,
    gchar **out_appstackName,
    gint *out_modelRevision,
    GCancellable *cancellable,
    GError **error);

void _hud_service_com_canonical_hud_call_register_application (
    _HudServiceComCanonicalHud *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _hud_service_com_canonical_hud_call_register_application_finish (
    _HudServiceComCanonicalHud *proxy,
    gchar **out_appObject,
    GAsyncResult *res,
    GError **error);

gboolean _hud_service_com_canonical_hud_call_register_application_sync (
    _HudServiceComCanonicalHud *proxy,
    const gchar *arg_id,
    gchar **out_appObject,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *const *_hud_service_com_canonical_hud_get_open_queries (_HudServiceComCanonicalHud *object);
gchar **_hud_service_com_canonical_hud_dup_open_queries (_HudServiceComCanonicalHud *object);
void _hud_service_com_canonical_hud_set_open_queries (_HudServiceComCanonicalHud *object, const gchar *const *value);

GVariant *_hud_service_com_canonical_hud_get_applications (_HudServiceComCanonicalHud *object);
GVariant *_hud_service_com_canonical_hud_dup_applications (_HudServiceComCanonicalHud *object);
void _hud_service_com_canonical_hud_set_applications (_HudServiceComCanonicalHud *object, GVariant *value);


/* ---- */

#define _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_PROXY (_hud_service_com_canonical_hud_proxy_get_type ())
#define _HUD_SERVICE_COM_CANONICAL_HUD_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_PROXY, _HudServiceComCanonicalHudProxy))
#define _HUD_SERVICE_COM_CANONICAL_HUD_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_PROXY, _HudServiceComCanonicalHudProxyClass))
#define _HUD_SERVICE_COM_CANONICAL_HUD_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_PROXY, _HudServiceComCanonicalHudProxyClass))
#define _HUD_SERVICE_IS_COM_CANONICAL_HUD_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_PROXY))
#define _HUD_SERVICE_IS_COM_CANONICAL_HUD_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_PROXY))

typedef struct __HudServiceComCanonicalHudProxy _HudServiceComCanonicalHudProxy;
typedef struct __HudServiceComCanonicalHudProxyClass _HudServiceComCanonicalHudProxyClass;
typedef struct __HudServiceComCanonicalHudProxyPrivate _HudServiceComCanonicalHudProxyPrivate;

struct __HudServiceComCanonicalHudProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  _HudServiceComCanonicalHudProxyPrivate *priv;
};

struct __HudServiceComCanonicalHudProxyClass
{
  GDBusProxyClass parent_class;
};

GType _hud_service_com_canonical_hud_proxy_get_type (void) G_GNUC_CONST;

void _hud_service_com_canonical_hud_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
_HudServiceComCanonicalHud *_hud_service_com_canonical_hud_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
_HudServiceComCanonicalHud *_hud_service_com_canonical_hud_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _hud_service_com_canonical_hud_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
_HudServiceComCanonicalHud *_hud_service_com_canonical_hud_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
_HudServiceComCanonicalHud *_hud_service_com_canonical_hud_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_SKELETON (_hud_service_com_canonical_hud_skeleton_get_type ())
#define _HUD_SERVICE_COM_CANONICAL_HUD_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_SKELETON, _HudServiceComCanonicalHudSkeleton))
#define _HUD_SERVICE_COM_CANONICAL_HUD_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_SKELETON, _HudServiceComCanonicalHudSkeletonClass))
#define _HUD_SERVICE_COM_CANONICAL_HUD_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_SKELETON, _HudServiceComCanonicalHudSkeletonClass))
#define _HUD_SERVICE_IS_COM_CANONICAL_HUD_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_SKELETON))
#define _HUD_SERVICE_IS_COM_CANONICAL_HUD_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), _HUD_SERVICE_TYPE_COM_CANONICAL_HUD_SKELETON))

typedef struct __HudServiceComCanonicalHudSkeleton _HudServiceComCanonicalHudSkeleton;
typedef struct __HudServiceComCanonicalHudSkeletonClass _HudServiceComCanonicalHudSkeletonClass;
typedef struct __HudServiceComCanonicalHudSkeletonPrivate _HudServiceComCanonicalHudSkeletonPrivate;

struct __HudServiceComCanonicalHudSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  _HudServiceComCanonicalHudSkeletonPrivate *priv;
};

struct __HudServiceComCanonicalHudSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _hud_service_com_canonical_hud_skeleton_get_type (void) G_GNUC_CONST;

_HudServiceComCanonicalHud *_hud_service_com_canonical_hud_skeleton_new (void);


G_END_DECLS

#endif /* __SERVICE_IFACE_H__ */
